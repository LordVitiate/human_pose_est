# Use the official Ubuntu 20.04 image as the base
FROM ubuntu:20.04

# Set environment variables to avoid prompts during package installation
ENV DEBIAN_FRONTEND=noninteractive

# Install required packages
RUN apt-get update && \
    apt-get install -y \
    build-essential \
    git \
    wget \
    libglu1-mesa-dev \
    freeglut3-dev \
    mesa-common-dev \
    libglib2.0-0 \
    libglib2.0-dev \
    nano && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Install Anaconda
RUN wget https://repo.anaconda.com/archive/Anaconda3-2024.10-1-Linux-x86_64.sh && \
    bash Anaconda3-2024.10-1-Linux-x86_64.sh -b -p /root/anaconda3 && \
    rm Anaconda3-2024.10-1-Linux-x86_64.sh

# Initialize conda
RUN /root/anaconda3/bin/conda init bash

# Create conda environment and install packages
RUN /root/anaconda3/bin/conda create --name mediapipe python=3.11 -y && \
    /root/anaconda3/bin/conda run -n mediapipe pip install --upgrade pip && \
    /root/anaconda3/bin/conda run -n mediapipe pip install mediapipe opencv-python

# Create and set the working directory
RUN mkdir -p /app/mount
WORKDIR /app

# Copy the test script into the container
COPY test_mediapipe.py .

# Define an entrypoint script to activate the environment and run the script
RUN echo '#!/bin/bash\n\
source /root/anaconda3/etc/profile.d/conda.sh && \
conda activate mediapipe && echo "conda activate mediapipe" >> ~/.bashrc && \
python3 -c "import mediapipe as mp; import cv2; print(\"MediaPipe version:\", mp.__version__); print(\"OpenCV version:\", cv2.__version__);" && \
exec "$@"' > /entrypoint.sh && \
chmod +x /entrypoint.sh

# Set the entrypoint
ENTRYPOINT ["/entrypoint.sh"]

# Default command if no arguments are passed
CMD ["/bin/bash"]